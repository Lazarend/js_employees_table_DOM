{"version":3,"sources":["scripts/main.js"],"names":["document","addEventListener","table","form","notification","tbody","querySelector","headerCells","querySelectorAll","newEmployeeForm","createElement","classList","add","innerHTML","notificationElement","setAttribute","style","transition","employees","selectedRow","sortDirection","sortTable","columnIndex","rowsArray","Array","from","sortType","sort","rowA","rowB","cellA","children","textContent","trim","cellB","valueA","parseFloat","replace","valueB","localeCompare","forEach","row","appendChild","saveCellEdit","input","cell","editedValue","value","cellIndex","length","displayErrorNotification","availableOffices","includes","errorMessage","join","displaySuccessNotification","ageValue","parseInt","salaryValue","formattedSalary","toFixed","message","remove","display","opacity","removeNotificationIfEmpty","headerCell","e","target","closest","selectRow","editCell","cellValue","type","key","focus","body","preventDefault","addNewEmployee","employeeList","formData","FormData","employeeName","get","position","office","age","salary","error","newRow","reset","push","Name","Position","Office","Age","Salary","setTimeout","hideNotification","findIndex","contains"],"mappings":"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","file":"main.eabd47c8.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const table = document.querySelector('table');\n  const tbody = table.querySelector('tbody');\n  const headerCells = document.querySelectorAll('thead th');\n  const newEmployeeForm = createNewEmployeeForm();\n  const notificationElement = createNotification();\n  const employees = [];\n\n  let selectedRow = null;\n  let sortDirection = 'asc';\n\n  headerCells.forEach((headerCell, columnIndex) => {\n    headerCell.addEventListener('click', () => {\n      sortTable(columnIndex);\n    });\n  });\n\n  tbody.addEventListener('click', (e) => {\n    const row = e.target.closest('tr');\n\n    if (row) {\n      selectRow(row);\n    }\n  });\n\n  tbody.addEventListener('dblclick', (e) => {\n    const cell = e.target.closest('td');\n\n    if (cell) {\n      editCell(cell);\n    }\n  });\n\n  document.body.appendChild(newEmployeeForm);\n  document.body.appendChild(notificationElement);\n\n  newEmployeeForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    addNewEmployee(newEmployeeForm, notificationElement, employees);\n  });\n\n  function createNewEmployeeForm() {\n    const form = document.createElement('form');\n\n    form.classList.add('new-employee-form');\n\n    form.innerHTML = `\n      <label>Name: <input\n        name=\"employeeName\" type=\"text\" data-qa=\"name\" required></label>\n      <label>Position: <input\n        name=\"position\" type=\"text\" data-qa=\"position\" required></label>\n      <label>Office:\n        <select name=\"office\" data-qa=\"office\" required>\n          <option value=\"Tokyo\">Tokyo</option>\n          <option value=\"Singapore\">Singapore</option>\n          <option value=\"London\">London</option>\n          <option value=\"New York\">New York</option>\n          <option value=\"Edinburgh\">Edinburgh</option>\n          <option value=\"San Francisco\">San Francisco</option>\n        </select>\n      </label>\n      <label>Age: <input\n        name=\"age\" type=\"number\" data-qa=\"age\" required></label>\n      <label>Salary: <input\n        name=\"salary\" type=\"number\" data-qa=\"salary\" required></label>\n      <button type=\"submit\">Save to table</button>\n    `;\n\n    return form;\n  }\n\n  function createNotification() {\n    const notification = document.createElement('div');\n\n    notification.classList.add('notification');\n    notification.setAttribute('data-qa', 'notification');\n    notification.style.transition = 'opacity 0.5s';\n\n    return notification;\n  }\n\n  function sortTable(columnIndex) {\n    const rowsArray = Array.from(tbody.querySelectorAll('tr'));\n    const sortType = sortDirection === 'asc' ? 'desc' : 'asc';\n\n    rowsArray.sort((rowA, rowB) => {\n      const cellA = rowA.children[columnIndex].textContent.trim();\n      const cellB = rowB.children[columnIndex].textContent.trim();\n\n      if (columnIndex === 3 || columnIndex === 4) {\n        const valueA = parseFloat(cellA.replace(/[$,]/g, ''));\n        const valueB = parseFloat(cellB.replace(/[$,]/g, ''));\n\n        return sortType === 'asc' ? valueA - valueB : valueB - valueA;\n      }\n\n      return sortType === 'asc' ? cellA.localeCompare(cellB)\n        : cellB.localeCompare(cellA);\n    });\n\n    tbody.innerHTML = '';\n    rowsArray.forEach((row) => tbody.appendChild(row));\n    sortDirection = sortType;\n  }\n\n  function selectRow(row) {\n    if (selectedRow) {\n      selectedRow.classList.remove('active');\n    }\n    row.classList.add('active');\n    selectedRow = row;\n  }\n\n  function addNewEmployee(form, notification, employeeList) {\n    const formData = new FormData(form);\n    const employeeName = formData.get('employeeName');\n    const position = formData.get('position');\n    const office = formData.get('office');\n    const age = formData.get('age');\n    const salary = formData.get('salary');\n\n    let error = '';\n\n    if (employeeName.length < 4) {\n      error = 'Name should contain more than 4 letters.';\n    } else if (position.trim() === '') {\n      error = 'Position is required.';\n    } else if (age < 18 || age > 90) {\n      error = 'Age must be between 18 and 90.';\n    } else if (+salary <= 0 || salary.trim() === '') {\n      error = 'Salary is required.';\n    }\n\n    if (error) {\n      displayErrorNotification(notification, error);\n\n      return;\n    }\n\n    const newRow = document.createElement('tr');\n\n    newRow.innerHTML = `\n      <td>${employeeName}</td>\n      <td>${position}</td>\n      <td>${office}</td>\n      <td>${age}</td>\n      <td>$${salary}</td>\n    `;\n    tbody.appendChild(newRow);\n    form.reset();\n    displaySuccessNotification(notification, 'Employee added successfully!');\n\n    employees.push({\n      Name: employeeName,\n      Position: position,\n      Office: office,\n      Age: parseInt(age),\n      Salary: parseFloat(salary),\n    });\n\n    setTimeout(() => {\n      hideNotification(notification);\n    }, 2000);\n\n    sortTable(headerCells.findIndex(\n      (cell) => cell.classList.contains('sort-asc')\n    ));\n  }\n\n  function editCell(cell) {\n    const cellValue = cell.textContent;\n    const input = document.createElement('input');\n\n    input.type = 'text';\n    input.value = cellValue;\n\n    input.addEventListener('blur', () => {\n      saveCellEdit(input, cell);\n    });\n\n    input.addEventListener('keypress', (e) => {\n      if (e.key === 'Enter') {\n        saveCellEdit(input, cell);\n      }\n    });\n\n    cell.textContent = '';\n    cell.appendChild(input);\n    input.focus();\n  }\n\n  function saveCellEdit(input, cell) {\n    const editedValue = input.value.trim();\n\n    if (editedValue === '') {\n      cell.textContent = 'N/A';\n    } else if (cell.cellIndex === 0 && editedValue.length < 4) {\n      displayErrorNotification(\n        notificationElement, 'Name can\\'t be less than 4 symbols'\n      );\n\n      return;\n    } else if (cell.cellIndex === 1 && editedValue.length <= 1) {\n      displayErrorNotification(\n        notificationElement, 'Position should be more than 1 symbol'\n      );\n\n      return;\n    } else if (cell.cellIndex === 2) {\n      const availableOffices = [\n        'Tokyo',\n        'Singapore',\n        'London',\n        'New York',\n        'Edinburgh',\n        'San Francisco',\n      ];\n\n      if (availableOffices.includes(editedValue)) {\n        cell.textContent = editedValue;\n\n        displaySuccessNotification(\n          notificationElement, 'Your data was changed'\n        );\n      } else {\n        const errorMessage = `Office must be one of the followed values:\n        ${availableOffices.join(', ')}`;\n\n        displayErrorNotification(notificationElement, errorMessage);\n\n        return;\n      }\n    } else if (cell.cellIndex === 3) {\n      const ageValue = parseInt(editedValue);\n\n      if (ageValue < 18 || ageValue > 90) {\n        displayErrorNotification(\n          notificationElement, 'Age should be less than 18 and more than 90'\n        );\n\n        return;\n      }\n    } else if (cell.cellIndex === 4) {\n      const salaryValue = parseFloat(editedValue.replace(/[$,]/g, ''));\n\n      if (salaryValue >= 10000) {\n        const formattedSalary = '$'\n        + salaryValue.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n\n        cell.textContent = formattedSalary;\n\n        displaySuccessNotification(notificationElement,\n          'Your data was changed');\n      } else {\n        displayErrorNotification(\n          notificationElement, 'Salary should be more than 10000'\n        );\n\n        return;\n      }\n    }\n\n    cell.textContent = editedValue;\n\n    if (cell.cellIndex === 0 || cell.cellIndex === 1 || cell.cellIndex === 3) {\n      displaySuccessNotification(notificationElement, 'Your data was changed');\n    }\n  }\n\n  function displayErrorNotification(notification, message) {\n    notification.classList.remove('success');\n    notification.classList.add('error');\n    notification.textContent = message;\n    notification.style.display = 'block';\n  }\n\n  function displaySuccessNotification(notification, message) {\n    notification.textContent = message;\n    notification.classList.remove('error');\n    notification.classList.add('success');\n    notification.style.opacity = '1';\n    notification.style.display = 'block';\n  }\n\n  function hideNotification(notification) {\n    notification.style.opacity = '0';\n\n    setTimeout(() => {\n      notification.textContent = '';\n      removeNotificationIfEmpty(notification);\n    }, 500);\n  }\n\n  function removeNotificationIfEmpty(notification) {\n    if (notification.textContent.trim() === '') {\n      notification.style.display = 'none';\n    }\n  }\n\n  removeNotificationIfEmpty(notificationElement);\n});\n"]}